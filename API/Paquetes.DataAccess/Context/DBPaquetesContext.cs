// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Paquetes.Entities.Entities;

#nullable disable

namespace Paquetes.DataAccess.Context
{
    public partial class DBPaquetesContext : DbContext
    {
        public DBPaquetesContext()
        {
        }

        public DBPaquetesContext(DbContextOptions<DBPaquetesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbMetodosPago> tbMetodosPago { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPaquetes> tbPaquetes { get; set; }
        public virtual DbSet<tbPersonas> tbPersonas { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbTracking> tbTracking { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.dept_ID)
                    .HasName("PK_gral_tbDepartamentos_dept_ID");

                entity.ToTable("tbDepartamentos", "gral");

                entity.Property(e => e.dept_ID)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Descripcion).HasMaxLength(200);

                entity.Property(e => e.dept_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.dept_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dept_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbMetodosPago>(entity =>
            {
                entity.HasKey(e => e.meto_ID)
                    .HasName("PK_tbMetodosPago_meto_ID");

                entity.ToTable("tbMetodosPago", "gral");

                entity.Property(e => e.meto_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.meto_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.meto_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.meto_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.meto_UserCreacionNavigation)
                    .WithMany(p => p.tbMetodosPagometo_UserCreacionNavigation)
                    .HasForeignKey(d => d.meto_UserCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbMetodosPago_meto_userCreacion_tbUsuarios_user_ID");

                entity.HasOne(d => d.meto_UserModificacionNavigation)
                    .WithMany(p => p.tbMetodosPagometo_UserModificacionNavigation)
                    .HasForeignKey(d => d.meto_UserModificacion)
                    .HasConstraintName("FK_tbMetodosPago_meto_user_Modificacion_tbUsuarios_user_ID");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_ID)
                    .HasName("PK_gral_tbMunicipios_muni_ID");

                entity.ToTable("tbMunicipios", "gral");

                entity.Property(e => e.muni_ID)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_ID)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Descripcion).HasMaxLength(200);

                entity.Property(e => e.muni_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.dept_ID)
                    .HasConstraintName("FK_gral_tbMunicipios_tbDepartamentos_dept_ID");
            });

            modelBuilder.Entity<tbPaquetes>(entity =>
            {
                entity.HasKey(e => e.paqu_ID)
                    .HasName("PK_tbPaquetes_paqu_ID");

                entity.ToTable("tbPaquetes", "paqu");

                entity.Property(e => e.muni_ID)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.paqu_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.paqu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.paqu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.paqu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.paqu_FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.trac_ID).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.meto)
                    .WithMany(p => p.tbPaquetes)
                    .HasForeignKey(d => d.meto_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPaquetes_meto_ID_tbMetodosPago_meto_ID");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbPaquetes)
                    .HasForeignKey(d => d.muni_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPaquetes_muni_ID_tbMunicipios_muni_ID");

                entity.HasOne(d => d.paqu_UserCreacionNavigation)
                    .WithMany(p => p.tbPaquetespaqu_UserCreacionNavigation)
                    .HasForeignKey(d => d.paqu_UserCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPaquetes_paqu_UserCreacion_tbUsuarios_user_ID");

                entity.HasOne(d => d.paqu_UserModificacionNavigation)
                    .WithMany(p => p.tbPaquetespaqu_UserModificacionNavigation)
                    .HasForeignKey(d => d.paqu_UserModificacion)
                    .HasConstraintName("FK_tbPaquetes_paqu_UserModificacion_tbUsuarios_user_ID");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbPaquetes)
                    .HasForeignKey(d => d.sucu_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPaquetes_sucu_ID_tbSucursales_sucu_ID");

                entity.HasOne(d => d.trac)
                    .WithMany(p => p.tbPaquetes)
                    .HasForeignKey(d => d.trac_ID)
                    .HasConstraintName("FK_tbPaquetes_trac_ID_tbTracking_trac_ID");
            });

            modelBuilder.Entity<tbPersonas>(entity =>
            {
                entity.HasKey(e => e.pers_ID)
                    .HasName("PK_tbPersonas_pers_ID");

                entity.ToTable("tbPersonas", "paqu");

                entity.HasIndex(e => e.pers_Identidad, "UQ_tbPersonas_pers_Identidad")
                    .IsUnique();

                entity.Property(e => e.pers_Apellidos)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pers_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pers_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pers_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pers_Identidad)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.pers_Nombres)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pers_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.pers_UserCreacionNavigation)
                    .WithMany(p => p.tbPersonaspers_UserCreacionNavigation)
                    .HasForeignKey(d => d.pers_UserCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPersonas_pers_UserCreacion_tbUsuarios_user_ID");

                entity.HasOne(d => d.pers_UserModificacionNavigation)
                    .WithMany(p => p.tbPersonaspers_UserModificacionNavigation)
                    .HasForeignKey(d => d.pers_UserModificacion)
                    .HasConstraintName("FK_tbPersonas_pers_UserModificacion_tbUsuarios_user_ID");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_ID)
                    .HasName("PK_tbSucursales_sucu_ID");

                entity.ToTable("tbSucursales", "paqu");

                entity.Property(e => e.muni_ID)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.sucu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbSucursales_muni_ID_tbMunicipios_muni_ID");

                entity.HasOne(d => d.sucu_UserCreacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UserCreacionNavigation)
                    .HasForeignKey(d => d.sucu_UserCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbSucursales_sucu_UserCreacion_tbUsuarios_user_ID");

                entity.HasOne(d => d.sucu_UserModificacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UserModificacionNavigation)
                    .HasForeignKey(d => d.sucu_UserModificacion)
                    .HasConstraintName("FK_tbSucursales_sucu_UserModificacion_tbUsuarios_user_ID");
            });

            modelBuilder.Entity<tbTracking>(entity =>
            {
                entity.HasKey(e => e.trac_ID)
                    .HasName("PK_tbTracking_trac_ID");

                entity.ToTable("tbTracking", "gral");

                entity.Property(e => e.trac_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.trac_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.trac_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.trac_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.user_ID)
                    .HasName("PK_tbUsuarios_user_ID");

                entity.ToTable("tbUsuarios", "acce");

                entity.Property(e => e.user_Contrasena).IsRequired();

                entity.Property(e => e.user_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.user_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.user_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_Username)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.pers)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.pers_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbUsuarios_pers_ID_tbPersonas_pers_ID");

                entity.HasOne(d => d.user_UserCreacionNavigation)
                    .WithMany(p => p.Inverseuser_UserCreacionNavigation)
                    .HasForeignKey(d => d.user_UserCreacion)
                    .HasConstraintName("FK_tbUsuario_user_ID_tbUsuarios_user_UserCreacion");

                entity.HasOne(d => d.user_UserModificacionNavigation)
                    .WithMany(p => p.Inverseuser_UserModificacionNavigation)
                    .HasForeignKey(d => d.user_UserModificacion)
                    .HasConstraintName("FK_tbUsuarios_user_ID_tbUsuarios_user_UserModificacion");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}